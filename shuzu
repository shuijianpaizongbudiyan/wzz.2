"wzzcyp"
sizeof->7 计算所占空间的大小，计算变量，数组，类型的大小—单位是字节—操作符
strlen->6 计算字符串的长度，而且只能是字符串—库函数
int main()
{
	char arr1[] = "abc";
	char arr2[] = { 'a','b','c' };
	printf("%d\n", sizeof(arr1));//4
	printf("%d\n", sizeof(arr2));//3
	printf("%d\n", strlen(arr1));//3
	printf("%d\n", strlen(arr2));//随机数
	return 0;
}

数组在内存里是连续存放的，且地址由低到高

int main()
{
	int arr[3][4] = { 1,2,3,4,5 };
	//三行四列，第一行1，2，3，4，第二行5，0，0，0
	int arr1[3][4] = { {1,2,3},{4,5} };
	int a = 0;
	for (a = 0;a < 3;a++)
	{
		int b = 0;
		for (b = 0;b < 4;b++)
		{
			printf("%d ", arr1[a][b]);
		}
		printf("\n");
	}
	//第一行1，2，3，0，第二行4，5，0，0
	char ch[][4] = { 'a','b','c' };
	//二维数组可省略行，不能省略列
	return 0;
}

//冒泡排序
void bubble_sort(int arr[], int sz)
{
	int i = 0;
	for (i = 0;i < sz-1;i++)
	{
		int j = 0;
		int flag = 1;
		for (j = 0;j < sz - 1 - i;j++)
		{
			if (arr[j] > arr[j + 1])
			{
				int tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
				flag = 0;
			}
		}if (flag == 1)
		{
			break;
		}
	}
}
int main()
{
	int arr[] = { 4,5,6,3,2,8,4,12,9,1 };
	int a = 0;
	int sz = sizeof(arr) / sizeof(arr[0]);
	bubble_sort(arr, sz);
	for (a = 0;a < sz;a++)
	{
		printf("%d ", arr[a]);
	}
	return 0;
}

int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9 };
	printf("%p\n", arr);
	printf("%p\n", arr+1);
	printf("%p\n", &arr[0]);
	printf("%p\n", &arr[0]+1);
	printf("%p\n", &arr);
	printf("%p\n", &arr+1);
	前两个是首元素地址，第三个是整个数组的地址
	sizeof(数组名)和&(数组名)表示整个数组，其余都是数组首元素地址
	return 0;
}
